# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: OpenWrt-CI

on:
  # schedule:
  #   - cron: 0 20 * * *
  push:
    branches:
      - master
  release:
    types: [published]
    
permissions:
  contents: read

jobs:

  build_openwrt:

    permissions:
      contents: write # for release creation

    name: Build OpenWrt firmware

    runs-on: ubuntu-latest

    if: github.event.repository.owner.id == github.event.sender.id || ! github.event.sender.id

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1-s1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

          df -h

      - name: Update feeds
        run: |
          sed -i 's/#src-git helloworld/src-git helloworld/g' ./feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Costom configure file
        run: |
          rm -f ./.config*
          touch ./.config
          #
          # ========================固件定制部分========================
          # 
          # 
          # 如果不对本区块做出任何编辑, 则生成默认配置固件. 
          # 
          # 以下为定制化固件选项和说明:
          #
          #
          # 有些插件/选项是默认开启的, 如果想要关闭, 请参照以下示例进行编写:
          # 
          #          =========================================
          #         |  # 取消编译VMware镜像:                   |
          #         |  cat >> .config <<EOF                   |
          #         |  # CONFIG_VMDK_IMAGES is not set        |
          #         |  EOF                                    |
          #          =========================================
          #
          # 
          # 以下是一些提前准备好的一些插件选项.
          # 直接取消注释相应代码块即可应用. 不要取消注释代码块上的汉字说明.
          # 如果不需要代码块里的某一项配置, 只需要删除相应行.
          #
          # 如果需要其他插件, 请按照示例自行添加.
          # 注意, 只需添加依赖链顶端的包. 如果你需要插件 A, 同时 A 依赖 B, 即只需要添加 A.
          # 
          # 无论你想要对固件进行怎样的定制, 都需要且只需要修改 EOF 回环内的内容.
          # 
          # 编译x64固件:
          # cat >> .config <<EOF
          # CONFIG_TARGET_x86=y
          # CONFIG_TARGET_x86_64=y
          # CONFIG_TARGET_x86_64_DEVICE_generic=y
          # CONFIG_BUSYBOX_CUSTOM=y
          # CONFIG_BUSYBOX_CONFIG_FEATURE_CHECK_UNICODE_IN_ENV=y
          # CONFIG_BUSYBOX_CONFIG_GETTY=y
          # CONFIG_BUSYBOX_CONFIG_LAST_SUPPORTED_WCHAR=0
          # CONFIG_BUSYBOX_CONFIG_SUBST_WCHAR=0
          # CONFIG_BUSYBOX_CONFIG_UNICODE_SUPPORT=y
          # CONFIG_LIBCURL_COOKIES=y
          # CONFIG_LIBCURL_FILE=y
          # CONFIG_LIBCURL_FTP=y
          # CONFIG_LIBCURL_HTTP=y
          # CONFIG_LIBCURL_MBEDTLS=y
          # CONFIG_LIBCURL_NGHTTP2=y
          # CONFIG_LIBCURL_NO_SMB="!"
          # CONFIG_LIBCURL_PROXY=y
          # CONFIG_LUA_ECO_DEFAULT_OPENSSL=y
          # CONFIG_LUA_ECO_OPENSSL=y
          # # CONFIG_LUA_ECO_WOLFSSL is not set
          # CONFIG_OPENSSL_ENGINE=y
          # CONFIG_OPENSSL_OPTIMIZE_SPEED=y
          # CONFIG_OPENSSL_WITH_ASM=y
          # CONFIG_OPENSSL_WITH_CHACHA_POLY1305=y
          # CONFIG_OPENSSL_WITH_CMS=y
          # CONFIG_OPENSSL_WITH_DEPRECATED=y
          # CONFIG_OPENSSL_WITH_ERROR_MESSAGES=y
          # CONFIG_OPENSSL_WITH_PSK=y
          # CONFIG_OPENSSL_WITH_SRP=y
          # CONFIG_OPENSSL_WITH_TLS13=y
          # CONFIG_PACKAGE_bash=y
          # CONFIG_PACKAGE_libbz2=y
          # CONFIG_PACKAGE_libcap=y
          # CONFIG_PACKAGE_libcurl=y
          # CONFIG_PACKAGE_libffi=y
          # CONFIG_PACKAGE_libgdbm=y
          # CONFIG_PACKAGE_liblzma=y
          # CONFIG_PACKAGE_libmbedtls=y
          # CONFIG_PACKAGE_libncurses=y
          # CONFIG_PACKAGE_libnghttp2=y
          # CONFIG_PACKAGE_libopenssl=y
          # CONFIG_PACKAGE_libpython3=y
          # CONFIG_PACKAGE_libreadline=y
          # CONFIG_PACKAGE_libsqlite3=y
          # CONFIG_PACKAGE_libuv=y
          # CONFIG_PACKAGE_libwebsockets-full=y
          # CONFIG_PACKAGE_python-pip-conf=y
          # CONFIG_PACKAGE_python3=y
          # CONFIG_PACKAGE_python3-asyncio=y
          # CONFIG_PACKAGE_python3-base=y
          # CONFIG_PACKAGE_python3-certifi=y
          # CONFIG_PACKAGE_python3-cgi=y
          # CONFIG_PACKAGE_python3-cgitb=y
          # CONFIG_PACKAGE_python3-chardet=y
          # CONFIG_PACKAGE_python3-codecs=y
          # CONFIG_PACKAGE_python3-ctypes=y
          # CONFIG_PACKAGE_python3-curl=y
          # CONFIG_PACKAGE_python3-dbm=y
          # CONFIG_PACKAGE_python3-decimal=y
          # CONFIG_PACKAGE_python3-distutils=y
          # CONFIG_PACKAGE_python3-email=y
          # CONFIG_PACKAGE_python3-idna=y
          # CONFIG_PACKAGE_python3-light=y
          # CONFIG_PACKAGE_python3-logging=y
          # CONFIG_PACKAGE_python3-lzma=y
          # CONFIG_PACKAGE_python3-multiprocessing=y
          # CONFIG_PACKAGE_python3-ncurses=y
          # CONFIG_PACKAGE_python3-openssl=y
          # CONFIG_PACKAGE_python3-pip=y
          # CONFIG_PACKAGE_python3-pkg-resources=y
          # CONFIG_PACKAGE_python3-pydoc=y
          # CONFIG_PACKAGE_python3-readline=y
          # CONFIG_PACKAGE_python3-requests=y
          # CONFIG_PACKAGE_python3-setuptools=y
          # CONFIG_PACKAGE_python3-sqlite3=y
          # CONFIG_PACKAGE_python3-unittest=y
          # CONFIG_PACKAGE_python3-urllib=y
          # CONFIG_PACKAGE_python3-urllib3=y
          # CONFIG_PACKAGE_python3-uuid=y
          # CONFIG_PACKAGE_python3-xml=y
          # CONFIG_PACKAGE_terminfo=y
          # CONFIG_PACKAGE_ttyd=y
          # CONFIG_PACKAGE_zlib=y
          # CONFIG_SQLITE3_COLUMN_METADATA=y
          # CONFIG_SQLITE3_DYNAMIC_EXTENSIONS=y
          # CONFIG_SQLITE3_FTS3=y
          # CONFIG_SQLITE3_FTS4=y
          # CONFIG_SQLITE3_FTS5=y
          # CONFIG_SQLITE3_JSON1=y
          # CONFIG_SQLITE3_RTREE=y
          # CONFIG_TARGET_KERNEL_PARTSIZE=256
          # CONFIG_TARGET_ROOTFS_PARTSIZE=512
          # EOF
          cat >> .config <<EOF
          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_x86_64_DEVICE_generic=y
          CONFIG_BUSYBOX_CUSTOM=y
          CONFIG_BUSYBOX_CONFIG_FEATURE_CHECK_UNICODE_IN_ENV=y
          CONFIG_BUSYBOX_CONFIG_GETTY=y
          CONFIG_BUSYBOX_CONFIG_LAST_SUPPORTED_WCHAR=0
          CONFIG_BUSYBOX_CONFIG_SUBST_WCHAR=0
          CONFIG_BUSYBOX_CONFIG_UNICODE_SUPPORT=y
          CONFIG_LIBCURL_COOKIES=y
          CONFIG_LIBCURL_FILE=y
          CONFIG_LIBCURL_FTP=y
          CONFIG_LIBCURL_HTTP=y
          CONFIG_LIBCURL_MBEDTLS=y
          CONFIG_LIBCURL_NGHTTP2=y
          CONFIG_LIBCURL_NO_SMB="!"
          CONFIG_LIBCURL_PROXY=y
          CONFIG_LUA_ECO_DEFAULT_OPENSSL=y
          CONFIG_LUA_ECO_OPENSSL=y
          # CONFIG_LUA_ECO_WOLFSSL is not set
          CONFIG_OPENSSL_ENGINE=y
          CONFIG_OPENSSL_OPTIMIZE_SPEED=y
          CONFIG_OPENSSL_WITH_ASM=y
          CONFIG_OPENSSL_WITH_CHACHA_POLY1305=y
          CONFIG_OPENSSL_WITH_CMS=y
          CONFIG_OPENSSL_WITH_DEPRECATED=y
          CONFIG_OPENSSL_WITH_ERROR_MESSAGES=y
          CONFIG_OPENSSL_WITH_PSK=y
          CONFIG_OPENSSL_WITH_SRP=y
          CONFIG_OPENSSL_WITH_TLS13=y
          CONFIG_PACKAGE_attendedsysupgrade-common=y
          CONFIG_PACKAGE_bash=y
          CONFIG_PACKAGE_cgi-io=y
          CONFIG_PACKAGE_libbz2=y
          CONFIG_PACKAGE_libcap=y
          CONFIG_PACKAGE_libcurl=y
          CONFIG_PACKAGE_libffi=y
          CONFIG_PACKAGE_libgdbm=y
          CONFIG_PACKAGE_libiwinfo=y
          CONFIG_PACKAGE_libiwinfo-data=y
          CONFIG_PACKAGE_liblua=y
          CONFIG_PACKAGE_liblucihttp=y
          CONFIG_PACKAGE_liblucihttp-lua=y
          CONFIG_PACKAGE_liblucihttp-ucode=y
          CONFIG_PACKAGE_liblzma=y
          CONFIG_PACKAGE_libmbedtls=y
          CONFIG_PACKAGE_libncurses=y
          CONFIG_PACKAGE_libnghttp2=y
          CONFIG_PACKAGE_libopenssl=y
          CONFIG_PACKAGE_libpython3=y
          CONFIG_PACKAGE_libreadline=y
          CONFIG_PACKAGE_libsqlite3=y
          CONFIG_PACKAGE_libuv=y
          CONFIG_PACKAGE_libwebsockets-full=y
          CONFIG_PACKAGE_lua=y
          CONFIG_PACKAGE_luci=y
          CONFIG_PACKAGE_luci-app-attendedsysupgrade=y
          CONFIG_PACKAGE_luci-app-firewall=y
          CONFIG_PACKAGE_luci-app-opkg=y
          CONFIG_PACKAGE_luci-base=y
          CONFIG_PACKAGE_luci-lib-base=y
          CONFIG_PACKAGE_luci-lib-ip=y
          CONFIG_PACKAGE_luci-lib-jsonc=y
          CONFIG_PACKAGE_luci-lib-nixio=y
          CONFIG_PACKAGE_luci-mod-admin-full=y
          CONFIG_PACKAGE_luci-mod-network=y
          CONFIG_PACKAGE_luci-mod-status=y
          CONFIG_PACKAGE_luci-mod-system=y
          CONFIG_PACKAGE_luci-proto-ipv6=y
          CONFIG_PACKAGE_luci-proto-ppp=y
          CONFIG_PACKAGE_luci-theme-bootstrap=y
          CONFIG_PACKAGE_python-pip-conf=y
          CONFIG_PACKAGE_python3=y
          CONFIG_PACKAGE_python3-asyncio=y
          CONFIG_PACKAGE_python3-base=y
          CONFIG_PACKAGE_python3-certifi=y
          CONFIG_PACKAGE_python3-cgi=y
          CONFIG_PACKAGE_python3-cgitb=y
          CONFIG_PACKAGE_python3-chardet=y
          CONFIG_PACKAGE_python3-codecs=y
          CONFIG_PACKAGE_python3-ctypes=y
          CONFIG_PACKAGE_python3-curl=y
          CONFIG_PACKAGE_python3-dbm=y
          CONFIG_PACKAGE_python3-decimal=y
          CONFIG_PACKAGE_python3-distutils=y
          CONFIG_PACKAGE_python3-email=y
          CONFIG_PACKAGE_python3-idna=y
          CONFIG_PACKAGE_python3-light=y
          CONFIG_PACKAGE_python3-logging=y
          CONFIG_PACKAGE_python3-lzma=y
          CONFIG_PACKAGE_python3-multiprocessing=y
          CONFIG_PACKAGE_python3-ncurses=y
          CONFIG_PACKAGE_python3-openssl=y
          CONFIG_PACKAGE_python3-pip=y
          CONFIG_PACKAGE_python3-pkg-resources=y
          CONFIG_PACKAGE_python3-pydoc=y
          CONFIG_PACKAGE_python3-readline=y
          CONFIG_PACKAGE_python3-requests=y
          CONFIG_PACKAGE_python3-setuptools=y
          CONFIG_PACKAGE_python3-sqlite3=y
          CONFIG_PACKAGE_python3-unittest=y
          CONFIG_PACKAGE_python3-urllib=y
          CONFIG_PACKAGE_python3-urllib3=y
          CONFIG_PACKAGE_python3-uuid=y
          CONFIG_PACKAGE_python3-xml=y
          CONFIG_PACKAGE_rpcd=y
          CONFIG_PACKAGE_rpcd-mod-file=y
          CONFIG_PACKAGE_rpcd-mod-iwinfo=y
          CONFIG_PACKAGE_rpcd-mod-luci=y
          CONFIG_PACKAGE_rpcd-mod-rpcsys=y
          CONFIG_PACKAGE_rpcd-mod-rrdns=y
          CONFIG_PACKAGE_rpcd-mod-ucode=y
          CONFIG_PACKAGE_terminfo=y
          CONFIG_PACKAGE_ttyd=y
          CONFIG_PACKAGE_ucode-mod-html=y
          CONFIG_PACKAGE_ucode-mod-math=y
          CONFIG_PACKAGE_uhttpd=y
          CONFIG_PACKAGE_uhttpd-mod-ubus=y
          CONFIG_PACKAGE_zlib=y
          CONFIG_SQLITE3_COLUMN_METADATA=y
          CONFIG_SQLITE3_DYNAMIC_EXTENSIONS=y
          CONFIG_SQLITE3_FTS3=y
          CONFIG_SQLITE3_FTS4=y
          CONFIG_SQLITE3_FTS5=y
          CONFIG_SQLITE3_JSON1=y
          CONFIG_SQLITE3_RTREE=y
          CONFIG_TARGET_KERNEL_PARTSIZE=256
          CONFIG_TARGET_ROOTFS_PARTSIZE=512
          EOF
          # cat >> .config <<EOF
          # CONFIG_TARGET_x86=y
          # CONFIG_TARGET_x86_64=y
          # CONFIG_TARGET_x86_64_Generic=y
          # EOF
          # 固件压缩:
          # cat >> .config <<EOF
          # CONFIG_TARGET_IMAGES_GZIP=y
          # EOF
          # 编译UEFI固件:
          # cat >> .config <<EOF
          # CONFIG_EFI_IMAGES=y
          # EOF
          # IPv6支持:
          # cat >> .config <<EOF
          # CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
          # CONFIG_PACKAGE_ipv6helper=y
          # EOF
          # 多文件系统支持:
          # cat >> .config <<EOF
          # CONFIG_PACKAGE_kmod-fs-nfs=y
          # CONFIG_PACKAGE_kmod-fs-nfs-common=y
          # CONFIG_PACKAGE_kmod-fs-nfs-v3=y
          # CONFIG_PACKAGE_kmod-fs-nfs-v4=y
          # CONFIG_PACKAGE_kmod-fs-ntfs=y
          # CONFIG_PACKAGE_kmod-fs-squashfs=y
          # EOF
          # USB3.0支持:
          # cat >> .config <<EOF
          # CONFIG_PACKAGE_kmod-usb-ohci=y
          # CONFIG_PACKAGE_kmod-usb-ohci-pci=y
          # CONFIG_PACKAGE_kmod-usb2=y
          # CONFIG_PACKAGE_kmod-usb2-pci=y
          # CONFIG_PACKAGE_kmod-usb3=y
          # EOF
          # 常用LuCI插件选择:
          # cat >> .config <<EOF
          # CONFIG_PACKAGE_luci-app-adbyby-plus=y
          # CONFIG_PACKAGE_luci-app-aria2=y
          # CONFIG_PACKAGE_luci-app-baidupcs-web=y
          # CONFIG_PACKAGE_luci-app-docker=y
          # CONFIG_PACKAGE_luci-app-frpc=y
          # CONFIG_PACKAGE_luci-app-hd-idle=y
          # CONFIG_PACKAGE_luci-app-kodexplorer=y
          # CONFIG_PACKAGE_luci-app-minidlna=y
          # CONFIG_PACKAGE_luci-app-openvpn=y
          # CONFIG_PACKAGE_luci-app-openvpn-server=y
          # CONFIG_PACKAGE_luci-app-qbittorrent=y
          # CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Kcptun=y
          # CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks=y
          # CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Server=y
          # CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Socks=y
          # CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray=y
          # CONFIG_PACKAGE_luci-app-ttyd=y
          # CONFIG_PACKAGE_luci-app-v2ray-server=y
          # CONFIG_PACKAGE_luci-app-verysync=y
          # CONFIG_PACKAGE_luci-app-webadmin=y
          # CONFIG_PACKAGE_luci-app-wireguard=y
          # CONFIG_PACKAGE_luci-app-wrtbwmon=y
          # EOF
          # LuCI主题:
          # cat >> .config <<EOF
          # CONFIG_PACKAGE_luci-theme-argon=y
          # CONFIG_PACKAGE_luci-theme-netgear=y
          # EOF
          # 常用软件包:
          # cat >> .config <<EOF
          # CONFIG_PACKAGE_curl=y
          # CONFIG_PACKAGE_htop=y
          # CONFIG_PACKAGE_nano=y
          # CONFIG_PACKAGE_screen=y
          # CONFIG_PACKAGE_tree=y
          # CONFIG_PACKAGE_vim-fuller=y
          # CONFIG_PACKAGE_wget=y
          # EOF
          # 取消编译VMware镜像以及镜像填充 (不要删除被缩进的注释符号):
          # cat >> .config <<EOF
          # # CONFIG_TARGET_IMAGES_PAD is not set
          # # CONFIG_VMDK_IMAGES is not set
          # EOF
          # 
          # ========================固件定制部分结束========================
          # 
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig


      - name: Make download
        run: |
          make download -j8
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Deliver buildinfo
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/
  

      - name: Upload release asset
        if: github.event == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.YOURTOKEN }}
          file: ./artifact/firmware/*
          tag: ${{ github.ref }}
          file_glob: true